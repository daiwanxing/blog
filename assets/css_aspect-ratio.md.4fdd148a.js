import{_ as s,c as a,o as p,a as n}from"./app.121000f6.js";const F=JSON.parse('{"title":"介绍 aspect-ratio","description":"","frontmatter":{},"headers":[],"relativePath":"css/aspect-ratio.md","lastUpdated":1676388986000}'),e={name:"css/aspect-ratio.md"},o=n(`<h1 id="介绍-aspect-ratio" tabindex="-1">介绍 aspect-ratio <a class="header-anchor" href="#介绍-aspect-ratio" aria-hidden="true">#</a></h1><p><code>aspect-ratio</code> 是一个为容器 设置期待的纵横比的 CSS 属性（该属性旨在为计算<strong>自动尺寸</strong>）。自动尺寸你可以理解为容器的默认渲染的宽高，如果是可替换元素，则就是内容元素的实际宽高。</p><p><code>aspect-ratio</code> 支持 设置 <code>&lt;ratio&gt;</code> 也可以是 <code>auto</code></p><p>从 chrome88+ 这一属性正式被实现。</p><p>已知容器的 纵横比 <code>16(width):9(height)</code>, 其中 <code>width: 300px</code>, 求得在该比值下的 height。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">300px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    aspect-ratio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">9</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>这个 div 默认渲染的高度是 0， 但是由于我们设置了纵横比，根据纵横比的值 <code>16 / 9 = 300 / x</code>。 那么 x 就很好求出来了。</p><p><code>x = 300 / 16 / 9 </code>， 所以 x 的实际渲染像素（也就是 div 容器的实际渲染的height）是 <code>168.75px</code>。</p><p>如果省略高和前面的斜杠字符，则高默认为 1。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">300px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    aspect-ratio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.5</span><span style="color:#A6ACCD;">； </span><span style="color:#676E95;font-style:italic;">/* 1.5 = 1.5 / 1 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>现在 就很容易求得 <code>height = 300 / 1.5 / 1</code>, height 的实际渲染高度为 <code>200px</code>.</p><p>如果 div 的宽高都不设置</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    aspect-ratio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.5</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>div 由于默认是块级容器，块级容器的一大特性就是宽度默认是父级容器的宽度， 具有流的特性。 假如在一个 1680 宽的屏幕。</p><p>则渲染出来的高 <code>1680 / x = 1.5 / 1, x = 1680 / 1.5 = 1120px</code>。</p><p>以上就是 <code>aspect-ratio</code> 的计算规则。</p><p><code>aspect-ratio</code> 可以使得自动去计算容器的尺寸。需要注意的是如果同时对容器设置 <code>width</code> 和 <code>height</code> 则该属性设置无效，只有当设置其中一个才会生效。</p>`,17),t=[o];function c(l,r,i,d,C,y){return p(),a("div",null,t)}const h=s(e,[["render",c]]);export{F as __pageData,h as default};
