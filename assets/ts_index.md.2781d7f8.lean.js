import{_ as s,c as a,o as n,a as l}from"./app.b77d871d.js";const i=JSON.parse('{"title":"typescript 题集","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. 定义一个 ConditionalPick 工具类型，支持根据指定的 Condition 条件来生成新的类型，对应的使用示例如下：","slug":"_1-定义一个-conditionalpick-工具类型-支持根据指定的-condition-条件来生成新的类型-对应的使用示例如下","link":"#_1-定义一个-conditionalpick-工具类型-支持根据指定的-condition-条件来生成新的类型-对应的使用示例如下","children":[]},{"level":2,"title":"2. 定义一个 SetOptional 工具类型， 支持部分属性变得可选，其他属性保持不变，对应的使用示例如下：","slug":"_2-定义一个-setoptional-工具类型-支持部分属性变得可选-其他属性保持不变-对应的使用示例如下","link":"#_2-定义一个-setoptional-工具类型-支持部分属性变得可选-其他属性保持不变-对应的使用示例如下","children":[]},{"level":2,"title":"3. 定义一个 RemoveDict 类型，支持删除类型中的所有字典类型，对应的使用示例如下：","slug":"_3-定义一个-removedict-类型-支持删除类型中的所有字典类型-对应的使用示例如下","link":"#_3-定义一个-removedict-类型-支持删除类型中的所有字典类型-对应的使用示例如下","children":[]},{"level":2,"title":"4. 定义一个 PickInsideArray 类型, 支持获取数组中的所有项的类型的集合","slug":"_4-定义一个-pickinsidearray-类型-支持获取数组中的所有项的类型的集合","link":"#_4-定义一个-pickinsidearray-类型-支持获取数组中的所有项的类型的集合","children":[]},{"level":2,"title":"5. 定义一个工具类型 AppendArgument，为已有的函数类型增加指定类型的参数，新增的参数名是 x，将作为新函数类型的第一个参数。","slug":"_5-定义一个工具类型-appendargument-为已有的函数类型增加指定类型的参数-新增的参数名是-x-将作为新函数类型的第一个参数。","link":"#_5-定义一个工具类型-appendargument-为已有的函数类型增加指定类型的参数-新增的参数名是-x-将作为新函数类型的第一个参数。","children":[]},{"level":2,"title":"6. 定义一个工具类型 NaiveFlat， 打平数组嵌套内的元素类型，把数组类型扁平化.","slug":"_6-定义一个工具类型-naiveflat-打平数组嵌套内的元素类型-把数组类型扁平化","link":"#_6-定义一个工具类型-naiveflat-打平数组嵌套内的元素类型-把数组类型扁平化","children":[]},{"level":2,"title":"7. 使用类型别名定义一个 EmptyObject 类型，使得该类型只允许空对象赋值：","slug":"_7-使用类型别名定义一个-emptyobject-类型-使得该类型只允许空对象赋值","link":"#_7-使用类型别名定义一个-emptyobject-类型-使得该类型只允许空对象赋值","children":[]}],"relativePath":"ts/index.md","lastUpdated":1677154475000}'),p={name:"ts/index.md"},o=l("",22),e=[o];function t(c,r,y,C,F,D){return n(),a("div",null,e)}const B=s(p,[["render",t]]);export{i as __pageData,B as default};
