import{_ as s,o as a,c as n,a as e}from"./app.51ed6dc1.js";const y=JSON.parse('{"title":"微信小程序开发笔记","description":"","frontmatter":{},"headers":[],"relativePath":"guide/mini-app/README.md","lastUpdated":1678290112000}'),o={name:"guide/mini-app/README.md"},t=e(`<h1 id="微信小程序开发笔记" tabindex="-1">微信小程序开发笔记 <a class="header-anchor" href="#微信小程序开发笔记" aria-hidden="true">#</a></h1><ol><li>为什么建议替换Page采用Component构建页面</li></ol><p>流行的VantUI都是采用Component构造器构造页面的，主要是Component构造器可以实现计算属性，以及observers对props、data内数据的监听。另外还有behaviors可以实现类型Vue中的mixins实现逻辑复用。</p><p>关于page的生命周期和Component的生命周期执行顺序:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 组件实例被创建 到 组件实例进入页面节点树</span></span>
<span class="line"><span style="color:#A6ACCD;">component created </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> component attched </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 页面页面加载 到  组件在视图层布局完成</span></span>
<span class="line"><span style="color:#A6ACCD;">page onLoad </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> component ready </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 页面卸载 到 组件实例被从页面节点树移除</span></span>
<span class="line"><span style="color:#A6ACCD;">page OnUnload </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> component detached</span></span>
<span class="line"></span></code></pre></div>`,5),p=[t];function l(c,r,i,d,_,C){return a(),n("div",null,p)}const A=s(o,[["render",l]]);export{y as __pageData,A as default};
