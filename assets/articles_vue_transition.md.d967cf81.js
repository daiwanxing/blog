import{h as re,b as Y,j as G,u as H,_ as L,w as W,i as K,c as pe,d as ue,a as de,k as ve,e as ye,m as De,E as T,l as Fe}from"./chunks/base.d35418b6.js";import{e as A,f as t,h as d,k as r,u as s,j as R,l as me,t as k,B as u,y as F,Z as N,a4 as S,c as m,r as E,w as I,o as fe,$ as _e,z as v,A as D,J as B,D as f,a2 as he,g as Ce,n as ge,ac as J,T as Z,i as Q,_ as be,R as X}from"./chunks/framework.0f2d6a02.js";import{a as w,i as P,u as x}from"./chunks/theme.9a2e48dd.js";class Te extends Error{constructor(l){super(l),this.name="ElementPlusError"}}function ke(n,l){throw new Te(`[${n}] ${l}`)}const $="update:modelValue",q="change",z="input",we=n=>["",...re].includes(n),Ae=Y({header:{type:String,default:""},bodyStyle:{type:G([String,Object,Array]),default:""},shadow:{type:String,values:["always","hover","never"],default:"always"}}),Ve=A({name:"ElCard"}),Se=A({...Ve,props:Ae,setup(n){const l=H("card");return(i,a)=>(t(),d("div",{class:r([s(l).b(),s(l).is(`${i.shadow}-shadow`)])},[i.$slots.header||i.header?(t(),d("div",{key:0,class:r(s(l).e("header"))},[R(i.$slots,"header",{},()=>[me(k(i.header),1)])],2)):u("v-if",!0),F("div",{class:r(s(l).e("body")),style:N(i.bodyStyle)},[R(i.$slots,"default")],6)],2))}});var Ee=L(Se,[["__file","/home/runner/work/element-plus/element-plus/packages/components/card/src/card.vue"]]);const ee=W(Ee),Ie=Y({modelValue:{type:[Boolean,String,Number],default:!1},value:{type:[Boolean,String,Number],default:!1},disabled:{type:Boolean,default:!1},width:{type:[String,Number],default:""},inlinePrompt:{type:Boolean,default:!1},activeIcon:{type:K},inactiveIcon:{type:K},activeText:{type:String,default:""},inactiveText:{type:String,default:""},activeColor:{type:String,default:""},inactiveColor:{type:String,default:""},borderColor:{type:String,default:""},activeValue:{type:[Boolean,String,Number],default:!0},inactiveValue:{type:[Boolean,String,Number],default:!1},name:{type:String,default:""},validateEvent:{type:Boolean,default:!0},id:String,loading:{type:Boolean,default:!1},beforeChange:{type:G(Function)},size:{type:String,validator:we},tabindex:{type:[String,Number]}}),Be={[$]:n=>w(n)||S(n)||P(n),[q]:n=>w(n)||S(n)||P(n),[z]:n=>w(n)||S(n)||P(n)},Pe=["onClick"],Ne=["id","aria-checked","aria-disabled","name","true-value","false-value","disabled","tabindex","onKeydown"],$e=["aria-hidden"],qe=["aria-hidden"],ze=["aria-hidden"],O="ElSwitch",Oe=A({name:O}),Me=A({...Oe,props:Ie,emits:Be,setup(n,{expose:l,emit:i}){const a=n,_=Ce(),{formItem:y}=pe(),h=ue(),o=H("switch");de({from:'"value"',replacement:'"model-value" or "v-model"',scope:O,version:"2.3.0",ref:"https://element-plus.org/en-US/component/switch.html#attributes",type:"Attribute"},m(()=>{var e;return!!((e=_.vnode.props)!=null&&e.value)}));const{inputId:ae}=ve(a,{formItemContext:y}),g=ye(m(()=>a.loading)),V=E(a.modelValue!==!1),C=E(),ne=E(),le=m(()=>[o.b(),o.m(h.value),o.is("disabled",g.value),o.is("checked",c.value)]),te=m(()=>({width:De(a.width)}));I(()=>a.modelValue,()=>{V.value=!0}),I(()=>a.value,()=>{V.value=!1});const M=m(()=>V.value?a.modelValue:a.value),c=m(()=>M.value===a.activeValue);[a.activeValue,a.inactiveValue].includes(M.value)||(i($,a.inactiveValue),i(q,a.inactiveValue),i(z,a.inactiveValue)),I(c,e=>{var p;C.value.checked=e,a.validateEvent&&((p=y==null?void 0:y.validate)==null||p.call(y,"change").catch(ce=>void 0))});const b=()=>{const e=c.value?a.inactiveValue:a.activeValue;i($,e),i(q,e),i(z,e),ge(()=>{C.value.checked=c.value})},U=()=>{if(g.value)return;const{beforeChange:e}=a;if(!e){b();return}const p=e();[J(p),w(p)].includes(!0)||ke(O,"beforeChange must return type `Promise<boolean>` or `boolean`"),J(p)?p.then(j=>{j&&b()}).catch(j=>{}):p&&b()},oe=m(()=>o.cssVarBlock({...a.activeColor?{"on-color":a.activeColor}:null,...a.inactiveColor?{"off-color":a.inactiveColor}:null,...a.borderColor?{"border-color":a.borderColor}:null})),ie=()=>{var e,p;(p=(e=C.value)==null?void 0:e.focus)==null||p.call(e)};return fe(()=>{C.value.checked=c.value}),l({focus:ie,checked:c}),(e,p)=>(t(),d("div",{class:r(s(le)),style:N(s(oe)),onClick:he(U,["prevent"])},[F("input",{id:s(ae),ref_key:"input",ref:C,class:r(s(o).e("input")),type:"checkbox",role:"switch","aria-checked":s(c),"aria-disabled":s(g),name:e.name,"true-value":e.activeValue,"false-value":e.inactiveValue,disabled:s(g),tabindex:e.tabindex,onChange:b,onKeydown:_e(U,["enter"])},null,42,Ne),!e.inlinePrompt&&(e.inactiveIcon||e.inactiveText)?(t(),d("span",{key:0,class:r([s(o).e("label"),s(o).em("label","left"),s(o).is("active",!s(c))])},[e.inactiveIcon?(t(),v(s(T),{key:0},{default:D(()=>[(t(),v(B(e.inactiveIcon)))]),_:1})):u("v-if",!0),!e.inactiveIcon&&e.inactiveText?(t(),d("span",{key:1,"aria-hidden":s(c)},k(e.inactiveText),9,$e)):u("v-if",!0)],2)):u("v-if",!0),F("span",{ref_key:"core",ref:ne,class:r(s(o).e("core")),style:N(s(te))},[e.inlinePrompt?(t(),d("div",{key:0,class:r(s(o).e("inner"))},[e.activeIcon||e.inactiveIcon?(t(),v(s(T),{key:0,class:r(s(o).is("icon"))},{default:D(()=>[(t(),v(B(s(c)?e.activeIcon:e.inactiveIcon)))]),_:1},8,["class"])):e.activeText||e.inactiveText?(t(),d("span",{key:1,class:r(s(o).is("text")),"aria-hidden":!s(c)},k(s(c)?e.activeText:e.inactiveText),11,qe)):u("v-if",!0)],2)):u("v-if",!0),F("div",{class:r(s(o).e("action"))},[e.loading?(t(),v(s(T),{key:0,class:r(s(o).is("loading"))},{default:D(()=>[f(s(Fe))]),_:1},8,["class"])):u("v-if",!0)],2)],6),!e.inlinePrompt&&(e.activeIcon||e.activeText)?(t(),d("span",{key:1,class:r([s(o).e("label"),s(o).em("label","right"),s(o).is("active",s(c))])},[e.activeIcon?(t(),v(s(T),{key:0},{default:D(()=>[(t(),v(B(e.activeIcon)))]),_:1})):u("v-if",!0),!e.activeIcon&&e.activeText?(t(),d("span",{key:1,"aria-hidden":!s(c)},k(e.activeText),9,ze)):u("v-if",!0)],2)):u("v-if",!0)],14,Pe))}});var Ue=L(Me,[["__file","/home/runner/work/element-plus/element-plus/packages/components/switch/src/switch.vue"]]);const se=W(Ue);const je={class:"block"},Ke={key:0,class:"circle"},Re={__name:"transition-one",setup(n){const[l]=x();return(i,a)=>{const _=se,y=ee;return t(),v(y,null,{default:D(()=>[F("div",je,[F("div",null,[f(Z,{name:"scale"},{default:D(()=>[s(l)?(t(),d("div",Ke)):u("",!0)]),_:1})]),f(_,{modelValue:s(l),"onUpdate:modelValue":a[0]||(a[0]=h=>Q(l)?l.value=h:null),size:"large"},null,8,["modelValue"])])]),_:1})}}};const Je={class:"block"},Ye={key:0,class:"circle"},Ge={__name:"transition-two",setup(n){const[l]=x();return(i,a)=>{const _=se,y=ee;return t(),v(y,null,{default:D(()=>[F("div",Je,[F("div",null,[f(Z,{name:"scale"},{default:D(()=>[s(l)?(t(),d("div",Ye)):u("",!0)]),_:1})]),f(_,{modelValue:s(l),"onUpdate:modelValue":a[0]||(a[0]=h=>Q(l)?l.value=h:null),size:"large"},null,8,["modelValue"])])]),_:1})}}},He=be(Ge,[["__scopeId","data-v-c9318a83"]]),Le=X(`<h1 id="深入了解-transition" tabindex="-1">深入了解 Transition <a class="header-anchor" href="#深入了解-transition" aria-label="Permalink to &quot;深入了解 Transition&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>Transition 是 Vue 提供的一种为元素实现动画过渡的一种方案。它也是 Vue 内置的一个组件。只不过，该组件本身并不会被渲染成一个 DOM 元素，</p><p>以下是一个使用 Transition 组件的案例：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Transition</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;div v-if=&quot;show&quot;&gt;&lt;/div&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">Transition</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>上面的模板中，我使用了 <code>v-if</code> 指令动态控制 div 的显示和隐藏。</p><p>此时，如果给 Transition 组件添加一些 props，就可以在 div 显示和隐藏期间设置一些过渡动画效果, 下面是个不错的例子：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Transition</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scale</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">show</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">Transition</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">tempalte</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scss</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">scale-enter-from</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">scale-leave-to</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">scale</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">opacity</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">scale-enter-active</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">scale-leave-active</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">transition</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.5s</span><span style="color:#A6ACCD;"> linear</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,8),We=X('<p>上面这个例子，主要是四行 css 的代码控制元素在切换状态时的过渡效果。</p><p>Vue 为过渡动画实现了一系列动画编排的预定义类名，如下图所示：</p><p><img src="https://vuejs.org/assets/transition-classes.f0f7b3c9.png" alt="transition-classes"></p><p>其中 <code>v</code> 是表示过渡动画的前缀名称，</p><div class="info custom-block"><p class="custom-block-title">说明</p><p><code>&lt;Transition&gt;</code> 接收一个名为 <code>name</code> 的 props。如果用户没有指定，则默认值为 <code>v</code>。</p></div><p>一个元素从显示到页面，到最终从页面上消失，分为两个阶段：</p><ul><li>enter</li><li>leave</li></ul><p>我们可以把一个 DOM 元素想象成一名演员，演员从上台表演（这里的舞台可以想象成页面） 到谢幕需要经历六个步骤：</p><ul><li>从幕后开始做准备</li><li>缓缓走向舞台</li><li>开始表演</li><li>表演结束，开始准备离场</li><li>缓缓离开舞台</li><li>回到幕后</li></ul><p>这六个步骤正好对应着上图中一系列预定义的过渡类。</p><ul><li>从幕后开始做准备 （v-enter-from）</li><li>缓缓走向舞台 （v-enter-active）</li><li>开始表演 (v-enter-to)</li><li>表演结束，开始准备离场 (v-leave-from)</li><li>缓缓离开舞台 (v-leave-active)</li><li>回到幕后 (v-leave-to)</li></ul><p>我们可以借助这些预设的过渡类来完成一个我们想要的为元素过渡的动画效果。</p><p>例如我们想要实现一个这样的动画编排效果</p><ol><li>入场前，元素相对于自身 Y 轴偏移 -100%，border-radius: 50%</li><li>入场中，设置元素的过渡时间，缓动函数，比如 cubic-bezier(0.68, -0.55, 0.265, 1.55) .5s</li><li>入场完毕，transform: scale(2);</li><li>离场中，设置元素的过渡时间，缓动函数，比如 cubic-bezier(0.68, -0.55, 0.265, 1.55) .5s</li><li>离场后，元素相对于自身 Y 轴偏移 -100%，border-radius: 50%</li></ol><p>下面的示例就是上述动画编排后的样子：</p>',15),es=JSON.parse('{"title":"深入了解 Transition","description":"","frontmatter":{},"headers":[],"relativePath":"articles/vue/transition.md","lastUpdated":1680597939000}'),Ze={name:"articles/vue/transition.md"},ss=Object.assign(Ze,{setup(n){return(l,i)=>(t(),d("div",null,[Le,f(Re),We,f(He)]))}});export{es as __pageData,ss as default};
