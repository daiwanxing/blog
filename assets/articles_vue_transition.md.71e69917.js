import{j as ue,b as L,g as Y,u as J,_ as W,w as Z,k as w,m as E,i as j,c as de,d as ve,n as ye,e as De,o as Fe,E as S,l as me,a as fe}from"./chunks/base.f92ef0d7.js";import{d as A,o as t,c as d,n as p,b as s,r as G,a as he,t as k,C as u,z as m,H as $,a4 as B,l as v,h as I,w as P,p as _e,$ as Ce,A as y,B as F,K as N,G as f,a2 as ge,Z as be,ac as H,m as Te,T as Q,ab as X,_ as Se,R as x}from"./chunks/framework.845aa843.js";import{u as ee}from"./chunks/index.70114fc9.js";class we extends Error{constructor(l){super(l),this.name="ElementPlusError"}}function ke(n,l){throw new we(`[${n}] ${l}`)}const q="update:modelValue",z="change",O="input",Ae=n=>["",...ue].includes(n),Ve=L({header:{type:String,default:""},bodyStyle:{type:Y([String,Object,Array]),default:""},shadow:{type:String,values:["always","hover","never"],default:"always"}}),Ee=A({name:"ElCard"}),Be=A({...Ee,props:Ve,setup(n){const l=J("card");return(i,a)=>(t(),d("div",{class:p([s(l).b(),s(l).is(`${i.shadow}-shadow`)])},[i.$slots.header||i.header?(t(),d("div",{key:0,class:p(s(l).e("header"))},[G(i.$slots,"header",{},()=>[he(k(i.header),1)])],2)):u("v-if",!0),m("div",{class:p(s(l).e("body")),style:$(i.bodyStyle)},[G(i.$slots,"default")],6)],2))}});var Ie=W(Be,[["__file","/home/runner/work/element-plus/element-plus/packages/components/card/src/card.vue"]]);const se=Z(Ie),Pe=L({modelValue:{type:[Boolean,String,Number],default:!1},disabled:{type:Boolean,default:!1},loading:{type:Boolean,default:!1},size:{type:String,validator:Ae},width:{type:[String,Number],default:""},inlinePrompt:{type:Boolean,default:!1},activeIcon:{type:j},inactiveIcon:{type:j},activeText:{type:String,default:""},inactiveText:{type:String,default:""},activeValue:{type:[Boolean,String,Number],default:!0},inactiveValue:{type:[Boolean,String,Number],default:!1},activeColor:{type:String,default:""},inactiveColor:{type:String,default:""},borderColor:{type:String,default:""},name:{type:String,default:""},validateEvent:{type:Boolean,default:!0},beforeChange:{type:Y(Function)},id:String,tabindex:{type:[String,Number]},value:{type:[Boolean,String,Number],default:!1}}),Ne={[q]:n=>w(n)||B(n)||E(n),[z]:n=>w(n)||B(n)||E(n),[O]:n=>w(n)||B(n)||E(n)},$e=["onClick"],qe=["id","aria-checked","aria-disabled","name","true-value","false-value","disabled","tabindex","onKeydown"],ze=["aria-hidden"],Oe=["aria-hidden"],Ke=["aria-hidden"],K="ElSwitch",Me=A({name:K}),Ue=A({...Me,props:Pe,emits:Ne,setup(n,{expose:l,emit:i}){const a=n,h=Te(),{formItem:D}=de(),_=ve(),o=J("switch");(e=>{e.forEach(c=>{fe({from:c[0],replacement:c[1],scope:K,version:"2.3.0",ref:"https://element-plus.org/en-US/component/switch.html#attributes",type:"Attribute"},v(()=>{var T;return!!((T=h.vnode.props)!=null&&T[c[2]])}))})})([['"value"','"model-value" or "v-model"',"value"],['"active-color"',"CSS var `--el-switch-on-color`","activeColor"],['"inactive-color"',"CSS var `--el-switch-off-color`","inactiveColor"],['"border-color"',"CSS var `--el-switch-border-color`","borderColor"]]);const{inputId:ne}=ye(a,{formItemContext:D}),g=De(v(()=>a.loading)),V=I(a.modelValue!==!1),C=I(),le=I(),te=v(()=>[o.b(),o.m(_.value),o.is("disabled",g.value),o.is("checked",r.value)]),oe=v(()=>[o.e("label"),o.em("label","left"),o.is("active",!r.value)]),ie=v(()=>[o.e("label"),o.em("label","right"),o.is("active",r.value)]),ce=v(()=>({width:Fe(a.width)}));P(()=>a.modelValue,()=>{V.value=!0}),P(()=>a.value,()=>{V.value=!1});const M=v(()=>V.value?a.modelValue:a.value),r=v(()=>M.value===a.activeValue);[a.activeValue,a.inactiveValue].includes(M.value)||(i(q,a.inactiveValue),i(z,a.inactiveValue),i(O,a.inactiveValue)),P(r,e=>{var c;C.value.checked=e,a.validateEvent&&((c=D==null?void 0:D.validate)==null||c.call(D,"change").catch(T=>void 0))});const b=()=>{const e=r.value?a.inactiveValue:a.activeValue;i(q,e),i(z,e),i(O,e),be(()=>{C.value.checked=r.value})},U=()=>{if(g.value)return;const{beforeChange:e}=a;if(!e){b();return}const c=e();[H(c),w(c)].includes(!0)||ke(K,"beforeChange must return type `Promise<boolean>` or `boolean`"),H(c)?c.then(R=>{R&&b()}).catch(R=>{}):c&&b()},re=v(()=>o.cssVarBlock({...a.activeColor?{"on-color":a.activeColor}:null,...a.inactiveColor?{"off-color":a.inactiveColor}:null,...a.borderColor?{"border-color":a.borderColor}:null})),pe=()=>{var e,c;(c=(e=C.value)==null?void 0:e.focus)==null||c.call(e)};return _e(()=>{C.value.checked=r.value}),l({focus:pe,checked:r}),(e,c)=>(t(),d("div",{class:p(s(te)),style:$(s(re)),onClick:ge(U,["prevent"])},[m("input",{id:s(ne),ref_key:"input",ref:C,class:p(s(o).e("input")),type:"checkbox",role:"switch","aria-checked":s(r),"aria-disabled":s(g),name:e.name,"true-value":e.activeValue,"false-value":e.inactiveValue,disabled:s(g),tabindex:e.tabindex,onChange:b,onKeydown:Ce(U,["enter"])},null,42,qe),!e.inlinePrompt&&(e.inactiveIcon||e.inactiveText)?(t(),d("span",{key:0,class:p(s(oe))},[e.inactiveIcon?(t(),y(s(S),{key:0},{default:F(()=>[(t(),y(N(e.inactiveIcon)))]),_:1})):u("v-if",!0),!e.inactiveIcon&&e.inactiveText?(t(),d("span",{key:1,"aria-hidden":s(r)},k(e.inactiveText),9,ze)):u("v-if",!0)],2)):u("v-if",!0),m("span",{ref_key:"core",ref:le,class:p(s(o).e("core")),style:$(s(ce))},[e.inlinePrompt?(t(),d("div",{key:0,class:p(s(o).e("inner"))},[e.activeIcon||e.inactiveIcon?(t(),y(s(S),{key:0,class:p(s(o).is("icon"))},{default:F(()=>[(t(),y(N(s(r)?e.activeIcon:e.inactiveIcon)))]),_:1},8,["class"])):e.activeText||e.inactiveText?(t(),d("span",{key:1,class:p(s(o).is("text")),"aria-hidden":!s(r)},k(s(r)?e.activeText:e.inactiveText),11,Oe)):u("v-if",!0)],2)):u("v-if",!0),m("div",{class:p(s(o).e("action"))},[e.loading?(t(),y(s(S),{key:0,class:p(s(o).is("loading"))},{default:F(()=>[f(s(me))]),_:1},8,["class"])):u("v-if",!0)],2)],6),!e.inlinePrompt&&(e.activeIcon||e.activeText)?(t(),d("span",{key:1,class:p(s(ie))},[e.activeIcon?(t(),y(s(S),{key:0},{default:F(()=>[(t(),y(N(e.activeIcon)))]),_:1})):u("v-if",!0),!e.activeIcon&&e.activeText?(t(),d("span",{key:1,"aria-hidden":!s(r)},k(e.activeText),9,Ke)):u("v-if",!0)],2)):u("v-if",!0)],14,$e))}});var Re=W(Ue,[["__file","/home/runner/work/element-plus/element-plus/packages/components/switch/src/switch.vue"]]);const ae=Z(Re);const je={class:"block"},Ge={key:0,class:"circle"},He={__name:"transition-one",setup(n){const[l]=ee();return(i,a)=>{const h=ae,D=se;return t(),y(D,null,{default:F(()=>[m("div",je,[m("div",null,[f(Q,{name:"scale"},{default:F(()=>[s(l)?(t(),d("div",Ge)):u("",!0)]),_:1})]),f(h,{modelValue:s(l),"onUpdate:modelValue":a[0]||(a[0]=_=>X(l)?l.value=_:null),size:"large"},null,8,["modelValue"])])]),_:1})}}};const Le={class:"block"},Ye={key:0,class:"circle"},Je={__name:"transition-two",setup(n){const[l]=ee();return(i,a)=>{const h=ae,D=se;return t(),y(D,null,{default:F(()=>[m("div",Le,[m("div",null,[f(Q,{name:"scale"},{default:F(()=>[s(l)?(t(),d("div",Ye)):u("",!0)]),_:1})]),f(h,{modelValue:s(l),"onUpdate:modelValue":a[0]||(a[0]=_=>X(l)?l.value=_:null),size:"large"},null,8,["modelValue"])])]),_:1})}}},We=Se(Je,[["__scopeId","data-v-c9318a83"]]),Ze=x(`<h1 id="深入了解-transition" tabindex="-1">深入了解 Transition <a class="header-anchor" href="#深入了解-transition" aria-label="Permalink to &quot;深入了解 Transition&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>Transition 是 Vue 提供的一种为元素实现动画过渡的一种方案。它也是 Vue 内置的一个组件。只不过，该组件本身并不会被渲染成一个 DOM 元素，</p><p>以下是一个使用 Transition 组件的案例：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Transition</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;div v-if=&quot;show&quot;&gt;&lt;/div&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">Transition</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>上面的模板中，我使用了 <code>v-if</code> 指令动态控制 div 的显示和隐藏。</p><p>此时，如果给 Transition 组件添加一些 props，就可以在 div 显示和隐藏期间设置一些过渡动画效果, 下面是个不错的例子：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Transition</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scale</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">show</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">Transition</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">tempalte</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scss</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">scale-enter-from</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">scale-leave-to</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">scale</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">opacity</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">scale-enter-active</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">scale-leave-active</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">transition</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.5s</span><span style="color:#A6ACCD;"> linear</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div>`,8),Qe=x('<p>上面这个例子，主要是四行 css 的代码控制元素在切换状态时的过渡效果。</p><p>Vue 为过渡动画实现了一系列动画编排的预定义类名，如下图所示：</p><p><img src="https://vuejs.org/assets/transition-classes.f0f7b3c9.png" alt="transition-classes"></p><p>其中 <code>v</code> 是表示过渡动画的前缀名称，</p><div class="info custom-block"><p class="custom-block-title">说明</p><p><code>&lt;Transition&gt;</code> 接收一个名为 <code>name</code> 的 props。如果用户没有指定，则默认值为 <code>v</code>。</p></div><p>一个元素从显示到页面，到最终从页面上消失，分为两个阶段：</p><ul><li>enter</li><li>leave</li></ul><p>我们可以把一个 DOM 元素想象成一名演员，演员从上台表演（这里的舞台可以想象成页面） 到谢幕需要经历六个步骤：</p><ul><li>从幕后开始做准备</li><li>缓缓走向舞台</li><li>开始表演</li><li>表演结束，开始准备离场</li><li>缓缓离开舞台</li><li>回到幕后</li></ul><p>这六个步骤正好对应着上图中一系列预定义的过渡类。</p><ul><li>从幕后开始做准备 （v-enter-from）</li><li>缓缓走向舞台 （v-enter-active）</li><li>开始表演 (v-enter-to)</li><li>表演结束，开始准备离场 (v-leave-from)</li><li>缓缓离开舞台 (v-leave-active)</li><li>回到幕后 (v-leave-to)</li></ul><p>我们可以借助这些预设的过渡类来完成一个我们想要的为元素过渡的动画效果。</p><p>例如我们想要实现一个这样的动画编排效果</p><ol><li>入场前，元素相对于自身 Y 轴偏移 -100%，border-radius: 50%</li><li>入场中，设置元素的过渡时间，缓动函数，比如 cubic-bezier(0.68, -0.55, 0.265, 1.55) .5s</li><li>入场完毕，transform: scale(2);</li><li>离场中，设置元素的过渡时间，缓动函数，比如 cubic-bezier(0.68, -0.55, 0.265, 1.55) .5s</li><li>离场后，元素相对于自身 Y 轴偏移 -100%，border-radius: 50%</li></ol><p>下面的示例就是上述动画编排后的样子：</p>',15),ns=JSON.parse('{"title":"深入了解 Transition","description":"","frontmatter":{},"headers":[],"relativePath":"articles/vue/transition.md","filePath":"articles/vue/transition.md","lastUpdated":1688877196000}'),Xe={name:"articles/vue/transition.md"},ls=Object.assign(Xe,{setup(n){return(l,i)=>(t(),d("div",null,[Ze,f(He),Qe,f(We)]))}});export{ns as __pageData,ls as default};
