import{_ as a,f as e,h as p,R as s,y as o}from"./chunks/framework.229ba910.js";const b=JSON.parse('{"title":"用正则解析字符串","description":"","frontmatter":{},"headers":[],"relativePath":"content/regex/tryUseRegxp.md","lastUpdated":1680399738000}'),n={name:"content/regex/tryUseRegxp.md"},t=s(`<h1 id="用正则解析字符串" tabindex="-1">用正则解析字符串 <a class="header-anchor" href="#用正则解析字符串" aria-label="Permalink to &quot;用正则解析字符串&quot;">​</a></h1><h2 id="解析一个-url-中的-host-pathname-以及-hash" tabindex="-1">解析一个 URL 中的 host,pathname 以及 hash <a class="header-anchor" href="#解析一个-url-中的-host-pathname-以及-hash" aria-label="Permalink to &quot;解析一个 URL 中的 host,pathname 以及 hash&quot;">​</a></h2><p>这是今天刷掘金遇到别人分享的一道面试题，但是题目并未要求用什么思路去解析。</p><p>例如，有一个如下的 URL</p><div class="language-http"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">https://chat.openai.com/chat/981b9ccc-abf1-4bce-9901-dd3d0f915b0b/#/redirect</span></span>
<span class="line"></span></code></pre></div><p>需要你过滤出其中的 host、pathname 还有 hash。</p><p>解法有很多，可以自己去实现一个 parser。也可以借助相关的内置对象</p><p>例如 <code>URL</code> 对象。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> url </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URL</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://chat.openai.com/chat/981b9ccc-abf1-4bce-9901-dd3d0f915b0b/#/redirect</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">host</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// chat.openai.com</span></span>
<span class="line"><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">hash</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// #/redirect</span></span>
<span class="line"><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">pathname</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// /chat/981b9ccc-abf1-4bce-9901-dd3d0f915b0b/</span></span>
<span class="line"></span></code></pre></div><p>我想到了用正则完成这个需求</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">https://chat.openai.com/chat/981b9ccc-abf1-4bce-9901-dd3d0f915b0b/#/redirect</span></span>
<span class="line"></span></code></pre></div><p>仔细分析这个字符串，我们需要用到分组捕获三个匹配，这三个匹配分别是：</p><ul><li><code>chat.openai.com</code></li><li><code>/chat/981b9ccc-abf1-4bce-9901-dd3d0f915b0b/</code></li><li><code>#/redirect</code></li></ul><p>要想匹配第一个分组，首先我们得分析第一个捕获组必须从 <code>https://</code> 的末尾位置开始匹配直到遇到第一个 <code>/</code>结尾。</p><p>这个不难，只需要匹配中遇到非 <code>/</code>的即可，也就是 <code>[^/\\]+</code>。</p><p>所以第一个捕获组就是 <code>([^/\\]+)</code>。</p><p>再继续看第二个分组，继续分析从第一个捕获组后的位置继续开始匹配，遇到 <code>#</code> 停止匹配，也就是说匹配 <code>#</code> 位置前面所有的字符。</p><p>这里可以用到正则的向前环视<code>(?=)</code>，也就是我们可以匹配任意的字符，但是匹配到了 <code>#</code> 就停止。那么正则如下 <code>.*(?=#)</code>。</p><p>所以第二个捕获组就是 <code>(.*(?=#))</code>。</p><p>最后一个捕获组就简单了，我们只需要匹配 <code>#</code> 后面所有的内容代表的 hash 字符串, <code>.*</code>。</p><p>所以最后一个捕获组 <code>(.*)</code></p><p>最终的正则表达式如下：</p>`,22),c=o("iframe",{frameborder:"0",width:"982",height:"188",src:"https://jex.im/regulex/#!embed=true&flags=&re=https%3F%3A%5C%2F%5C%2F(%5B%5E%5C%2F%5D%2B)(.*(%3F%3D%23))(.%2B)"},null,-1),l=s(`<p>最后我们通过该正则来解析以下字符串：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://chat.openai.com/chat/981b9ccc-abf1-4bce-9901-dd3d0f915b0b/#/redirect</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">https</span><span style="color:#89DDFF;">?</span><span style="color:#C3E88D;">:</span><span style="color:#A6ACCD;">\\/\\/</span><span style="color:#89DDFF;">([^</span><span style="color:#A6ACCD;">\\/</span><span style="color:#89DDFF;">]+)(</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*(?=</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">))(</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">+)/</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>成功得到一个解析后的 host、pathname 和 hash字符串。</p>`,3),r=[t,c,l];function d(i,h,D,y,C,A){return e(),p("div",null,r)}const _=a(n,[["render",d]]);export{b as __pageData,_ as default};
