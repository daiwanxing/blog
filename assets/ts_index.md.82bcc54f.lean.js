import{_ as s,c as n,o as a,a as l}from"./app.d558be66.js";const i=JSON.parse('{"title":"typescript 题集","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. 定义一个 ConditionalPick 工具类型，支持根据指定的 Condition 条件来生成新的类型，对应的使用示例如下：","slug":"_1-定义一个-conditionalpick-工具类型-支持根据指定的-condition-条件来生成新的类型-对应的使用示例如下","link":"#_1-定义一个-conditionalpick-工具类型-支持根据指定的-condition-条件来生成新的类型-对应的使用示例如下","children":[]},{"level":2,"title":"2. 定义一个 SetOptional 工具类型， 支持部分属性变得可选，其他属性保持不变，对应的使用示例如下：","slug":"_2-定义一个-setoptional-工具类型-支持部分属性变得可选-其他属性保持不变-对应的使用示例如下","link":"#_2-定义一个-setoptional-工具类型-支持部分属性变得可选-其他属性保持不变-对应的使用示例如下","children":[]},{"level":2,"title":"3. 定义一个 RemoveDict 类型，支持删除类型中的所有字典类型，对应的使用示例如下：","slug":"_3-定义一个-removedict-类型-支持删除类型中的所有字典类型-对应的使用示例如下","link":"#_3-定义一个-removedict-类型-支持删除类型中的所有字典类型-对应的使用示例如下","children":[]},{"level":2,"title":"4. 定义一个 PickInsideArray 类型, 支持获取数组中的所有项的类型的集合","slug":"_4-定义一个-pickinsidearray-类型-支持获取数组中的所有项的类型的集合","link":"#_4-定义一个-pickinsidearray-类型-支持获取数组中的所有项的类型的集合","children":[]},{"level":2,"title":"5. 定义一个工具类型 AppendArgument，为已有的函数类型增加指定类型的参数，新增的参数名是 x，将作为新函数类型的第一个参数。","slug":"_5-定义一个工具类型-appendargument-为已有的函数类型增加指定类型的参数-新增的参数名是-x-将作为新函数类型的第一个参数。","link":"#_5-定义一个工具类型-appendargument-为已有的函数类型增加指定类型的参数-新增的参数名是-x-将作为新函数类型的第一个参数。","children":[]}],"relativePath":"ts/index.md","lastUpdated":1672135816000}'),p={name:"ts/index.md"},o=l("",16),e=[o];function t(c,r,y,C,F,D){return a(),n("div",null,e)}const B=s(p,[["render",t]]);export{i as __pageData,B as default};
