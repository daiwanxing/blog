import{_ as s,c as a,o as n,a as e}from"./app.b77d871d.js";const C=JSON.parse('{"title":"用正则解析字符串","description":"","frontmatter":{},"headers":[{"level":2,"title":"解析一个 URL 中的 host,pathname 以及 hash","slug":"解析一个-url-中的-host-pathname-以及-hash","link":"#解析一个-url-中的-host-pathname-以及-hash","children":[]}],"relativePath":"regex/tryUseRegxp.md","lastUpdated":1677053920000}'),p={name:"regex/tryUseRegxp.md"},l=e(`<h1 id="用正则解析字符串" tabindex="-1">用正则解析字符串 <a class="header-anchor" href="#用正则解析字符串" aria-hidden="true">#</a></h1><h2 id="解析一个-url-中的-host-pathname-以及-hash" tabindex="-1">解析一个 URL 中的 host,pathname 以及 hash <a class="header-anchor" href="#解析一个-url-中的-host-pathname-以及-hash" aria-hidden="true">#</a></h2><p>这是今天刷掘金遇到别人分享的一道面试题，但是题目并未要求用什么思路去解析。</p><p>例如，有一个如下的 URL</p><div class="language-http"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">https://chat.openai.com/chat/981b9ccc-abf1-4bce-9901-dd3d0f915b0b/#/redirect</span></span>
<span class="line"></span></code></pre></div><p>需要你过滤出其中的 host、pathname 还有 hash。</p><p>解法有很多，可以自己去实现一个 parser。也可以借助相关的内置对象</p><p>例如 <code>URL</code> 对象。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> url </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URL</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://chat.openai.com/chat/981b9ccc-abf1-4bce-9901-dd3d0f915b0b/#/redirect</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">host</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// chat.openai.com</span></span>
<span class="line"><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">hash</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// #/redirect</span></span>
<span class="line"><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">pathname</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// /chat/981b9ccc-abf1-4bce-9901-dd3d0f915b0b/</span></span>
<span class="line"></span></code></pre></div><p>我想到了用正则完成这个需求</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">https://chat.openai.com/chat/981b9ccc-abf1-4bce-9901-dd3d0f915b0b/#/redirect</span></span>
<span class="line"></span></code></pre></div><p>仔细分析这个字符串，我们需要用到分组捕获三个匹配，这三个匹配分别是：</p><ul><li><code>chat.openai.com</code></li><li><code>/chat/981b9ccc-abf1-4bce-9901-dd3d0f915b0b/</code></li><li><code>#/redirect</code></li></ul><p>要想匹配第一个分组，</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://chat.openai.com/chat/981b9ccc-abf1-4bce-9901-dd3d0f915b0b/#/redirect</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">https</span><span style="color:#89DDFF;">?</span><span style="color:#C3E88D;">:</span><span style="color:#A6ACCD;">\\/\\/</span><span style="color:#89DDFF;">([^</span><span style="color:#A6ACCD;">\\/</span><span style="color:#89DDFF;">]+)(</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*(?=</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">))(</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">+)/</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>这里用到了三个分组，第一个分组捕获 host, 第二个捕获 pathname, 最后一个捕获 hash。</p>`,16),t=[l];function o(c,r,i,h,d,D){return n(),a("div",null,t)}const A=s(p,[["render",o]]);export{C as __pageData,A as default};
