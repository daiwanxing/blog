import{f as a,h as n,B as p,_ as d,y as s,D as o,R as l,l as t}from"./chunks/framework.0f2d6a02.js";const y={class:"linear-example"},C={key:0,class:"box"},D={key:1,class:"box-2"},F={key:2,class:"box-3"},c={__name:"linear-example",props:{show1:{type:Boolean},show2:{type:Boolean},show3:{type:Boolean}},setup(e){return(r,i)=>(a(),n("div",y,[e.show1?(a(),n("div",C)):p("",!0),e.show2?(a(),n("div",D)):p("",!0),e.show3?(a(),n("div",F)):p("",!0)]))}};const g={},_={class:"radial-gradient"},A=s("div",{class:"child-1"},null,-1),h=[A];function u(e,r){return a(),n("div",_,h)}const b=d(g,[["render",u]]),m=l(`<h1 id="css3-渐变" tabindex="-1">CSS3 渐变 <a class="header-anchor" href="#css3-渐变" aria-label="Permalink to &quot;CSS3 渐变&quot;">​</a></h1><p><code>CSS</code> 渐变可以分为：线性渐变、径向渐变和锥形渐变三种，渐变不能使用 <code>transition</code> 进行颜色值的过渡，因为渐变最终呈现的只是一张图片，无法对图片进行过渡。</p><p>渐变的一大特点是可以创建多种颜色并指定渐变的角度。</p><p>大部分人使用最多的应该是线性渐变，也是最简单的渐变，只需要指定两种以上的颜色，就能创建一个平滑的颜色过渡渐变。</p><p><code>CSS3</code> 渐变被划分在了 <a href="https://www.w3.org/TR/css-images-3/#linear-gradients" target="_blank" rel="nofollow noopener noreferrer"><code>CSS Images Module Level 3</code></a> 中，它属于 CSS3 中的图像模块规范，我们可以点击查看每个属性的最新规范定义。</p><h2 id="线性渐变" tabindex="-1">线性渐变 <a class="header-anchor" href="#线性渐变" aria-label="Permalink to &quot;线性渐变&quot;">​</a></h2><p>线性渐变通过使用 <code>linear-gradient()</code> 函数创建，可以设置渐变的角度从指定方向开始渐变。</p><p>例如：</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">/* to right 是一个角度的关键字，会被解析成 90deg, 而 to top 解析成 0deg */</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">linear-gradient</span><span style="color:#89DDFF;">(to</span><span style="color:#A6ACCD;"> right</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> blue</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yellow</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,9),f=s("p",null,[t("角度可以使用一系列的关键字值，也可以使用具体的数值和单位。缺省角度值为 "),s("code",null,"180deg"),t(" (也就是 "),s("code",null,"to bottom"),t(")；")],-1),w=s("blockquote",null,[s("p",null,"For the purpose of this argument, 0deg points upward, and positive angles represent clockwise rotation, so 90deg point toward the right.")],-1),v=s("blockquote",null,[s("p",null,"The unit identifier may be omitted if the <angle> is zero.")],-1),x=s("p",null,"除了渐变的方向可以使用具体的数值外，还可以对渐变的颜色使用数值表示渐变的开始位置和停止位置。",-1),T=l(`<div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box-2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">/* blue 颜色起始位置是0，渐变到 50%， </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      灰色渐变的起始位置是 50% + 1px，结束位置是 100%  */</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">linear-gradient</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">3.3deg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> blue </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> gray </span><span style="color:#82AAFF;">calc</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">50%</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1px</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>除了百分比单位之外，还可以使用像素单位</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box-3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">linear-gradient</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">45deg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> blue </span><span style="color:#F78C6C;">69px</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> gray </span><span style="color:#F78C6C;">69px</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>具体渲染效果如下所示:</p>`,4),S=l(`<p>这是一个对半分的渐变色，你可能会好奇为什么渐变位置的像素单位是 69px。</p><p>这里面必须要有个概念知识要被提及。那就是: <strong>gradient-line</strong></p><p><strong>gradient-line</strong> 由渐变的方向来决定，如果渐变的方向是 <code>to right</code>，那么 <strong>gradient-line</strong> 就是从左往右。</p><p>如果渐变的方向是 <code>45deg</code>，那么 <strong>gradient-line</strong> 的位置如下图所示：</p><p><img src="https://www.w3.org/TR/css-images-3/images/gradient-diagram.png" alt="https://www.w3.org/TR/css-images-3/images/gradient-diagram.png"></p><p>阅读 w3c 中的 <a href="https://www.w3.org/TR/css-images-3/#linear-gradients" target="_blank" rel="nofollow noopener noreferrer"><code>CSS Images Module Level 3</code></a> 规范得知，<strong>gradient-line</strong> 的长度计算公式为：</p><blockquote><p><strong>A</strong> the angle (in any quadrant) defining the gradient line’s direction such that 0 degrees points upwards and positive angles represent clockwise rotation,</p><p><strong>W</strong> the width of the gradient box,</p><p><strong>H</strong> the height of the gradient box, The length of the gradient line (between the starting point and ending point) is:</p><p>abs(W _ sin(A)) + abs(H _ cos(A))</p></blockquote><p>所以，上面这个示例中，<strong>gradient-line</strong> 的长度为 <code>Math.abs(100 * Math.sin(45)) + Math.abs(100 * Math.cos(45))</code></p><p>最终的计算结果约等于 <code>138</code>，如果想实现对半分的渐变，则第一个颜色结束位置应该是 <code>138 / 2 = 69px</code>。故 <code>69px</code> 就是这么得来的。</p><h2 id="径向渐变" tabindex="-1">径向渐变 <a class="header-anchor" href="#径向渐变" aria-label="Permalink to &quot;径向渐变&quot;">​</a></h2><p>径向渐变为开发者提供绘制圆形、椭圆形的渐变能力。如果说线性渐变可以填充整个容器的背景，那径向渐变则可以在填充背景色的情况下改变背景的形状。</p><p>在径向渐变中，颜色不像线性渐变那样从渐变框的一侧平滑地淡化到另一侧，而是从一个点出现并以圆形或椭圆形平滑地向外扩散。</p><p>创建一个简单的径向渐变。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">radial-gradient</span><span style="color:#89DDFF;">(#</span><span style="color:#A6ACCD;">9c27b0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">ff9800</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,14),k=l(`<p>径向渐变的 <code>ending-shape</code> 缺省值是 <code>ellipse</code>, 径向渐变的 <code>start-point</code> 默认是容器的中心位置，<code>end-point</code> 表示容器的大小。</p><p>如果要创建一个 <code>circle</code> 形状的渐变，也很简单。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">radial-gradient</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">circle</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">000 </span><span style="color:#F78C6C;">0%</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">ff9800 </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>创建一个 <code>100px</code> 的 圆形渐变。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">radial-gradient</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> circle</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">000 </span><span style="color:#F78C6C;">0%</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">ff9800 </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>我们还可以为径向渐变设置 <code>position</code>，需要注意的是渐变的的定位默认是从<strong>中心位置</strong>开始。</p><p>如果设置 <code>circle at top left</code>, 则实际的中心位置如下图所示。</p><p><img src="https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://archive.smashing.media/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/359e5216-94e1-4c08-9ed3-298647be077d/5-deep-dive-into-css-radial-gradient-conic-gradient.jpeg" alt="https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://archive.smashing.media/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/359e5216-94e1-4c08-9ed3-298647be077d/5-deep-dive-into-css-radial-gradient-conic-gradient.jpeg"></p><h3 id="锥形渐变" tabindex="-1">锥形渐变 <a class="header-anchor" href="#锥形渐变" aria-label="Permalink to &quot;锥形渐变&quot;">​</a></h3>`,9),P=JSON.parse('{"title":"CSS3 渐变","description":"","frontmatter":{},"headers":[],"relativePath":"articles/css/gradient.md","lastUpdated":1681136501000}'),B={name:"articles/css/gradient.md"},V=Object.assign(B,{setup(e){return(r,i)=>(a(),n("div",null,[m,o(c,{show1:""}),f,w,v,x,o(c,{show2:""}),T,o(c,{show3:""}),S,o(b),k]))}});export{P as __pageData,V as default};
