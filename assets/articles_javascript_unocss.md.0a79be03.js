import{_ as s,o as a,c as n,R as o}from"./chunks/framework.62e38f8b.js";const d=JSON.parse('{"title":"认识 UnoCSS","description":"","frontmatter":{},"headers":[],"relativePath":"articles/javascript/unocss.md","filePath":"articles/javascript/unocss.md","lastUpdated":1686464984000}'),l={name:"articles/javascript/unocss.md"},p=o(`<h1 id="认识-unocss" tabindex="-1">认识 UnoCSS <a class="header-anchor" href="#认识-unocss" aria-label="Permalink to &quot;认识 UnoCSS&quot;">​</a></h1><p><a href="https://unocss.dev/" target="_blank" rel="nofollow noopener noreferrer">unoCSS</a> 是一个 CSS <a href="https://css-tricks.com/lets-define-exactly-atomic-css/" target="_blank" rel="nofollow noopener noreferrer"><em>原子化</em></a> <strong>引擎</strong>。</p><blockquote><p>原子化 CSS 是一种 CSS 的架构方式，它倾向于小巧且用途单一的 class，并且会以视觉效果进行命名。</p></blockquote><p>注意，并非一个<a href="https://css-tricks.com/lets-define-exactly-atomic-css/" target="_blank" rel="nofollow noopener noreferrer"><em>原子化</em></a>的<strong>框架</strong>，它不同于 <a href="https://tailwindcss.com/" target="_blank" rel="nofollow noopener noreferrer">tailwind.css</a> 或者 <a href="https://windicss.org/" target="_blank" rel="nofollow noopener noreferrer">windicss</a>。</p><p>目前这个插件已经获得了 <em>12K</em> 的 star，而且出自 <a href="https://github.com/antfu" target="_blank" rel="nofollow noopener noreferrer">Anthony Fu</a> 大佬之手，想必在可靠性和稳定性有着很大的保障。</p><p>既然是引擎，那在开发者的角度，是偏向于底层的。我们可以基于 UnoCSS 引擎开发新的 CSS 原子化框架。</p><p>UnoCSS <a href="https://unocss.dev/presets/uno" target="_blank" rel="nofollow noopener noreferrer">内置的预设</a>正是基于 UnoCSS 开发的，目前已经有很多的基于 UnoCSS 的<a href="https://unocss.dev/presets/community" target="_blank" rel="nofollow noopener noreferrer">社区预设</a>方案。</p><p>我已经上手使用 UnoCSS 一段时间了，UnoCSS 给我最大的感觉是直观而且易于使用，当你真正尝试使用 UnoCSS 后，你可能不得不怀疑自己真的是否需要手写 CSS 样式。</p><h2 id="原子化框架能做什么" tabindex="-1">原子化框架能做什么 <a class="header-anchor" href="#原子化框架能做什么" aria-label="Permalink to &quot;原子化框架能做什么&quot;">​</a></h2><p>如果你使用过 <a href="https://tailwindcss.com/" target="_blank" rel="nofollow noopener noreferrer">tailwind.css</a> 或者 <a href="https://windicss.org/" target="_blank" rel="nofollow noopener noreferrer">windicss</a> 这类原子化框架的话。</p><p>当我给出一段如下的规则：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">py-10 mx-10 fw-300 bg-black border-rounded flex items-center</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>你肯定已经知道这个 div 最终渲染的效果了。</p><p>原子化框架除了预设的静态规则外，还可以支持动态规则，例如：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">rules</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">   [</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">m-</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+)</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">([,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">d</span><span style="color:#89DDFF;">])</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">margin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`\${</span><span style="color:#A6ACCD;">d </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">rem</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">   [</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">p-</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+)</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">match</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">padding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`\${</span><span style="color:#A6ACCD;">match[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">rem</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>当我们使用 <code>p-任意的数字</code> 就会生成对应的规则。</p><p>例如 <code>p-10000</code> 就会编译完毕后生成 <code>{ padding: 2500rem }</code></p><p>除了上述的静态规则和动态规则外，原子化 CSS 框架还支持<em>可变修饰</em>。</p><p>可变修饰就是通过使用括号对相同的工具类进行编组，将其应用于同一可变修饰。</p><p>例如：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hover:(bg-white fw-700 text-red text-center text-10)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>当鼠标移入此 div 中，就会触发 hover 伪类同时应该括号中的所有的工具类样式。</p><p>到目前为止，上述提到的功能在 UnoCSS 中均已经得到了实现，如果 unoCSS 的能力仅限于模仿其他原子化框架，那也不会得到这么多 star。</p><h2 id="unocss-真正威力" tabindex="-1">UnoCSS 真正威力 <a class="header-anchor" href="#unocss-真正威力" aria-label="Permalink to &quot;UnoCSS 真正威力&quot;">​</a></h2><h3 id="无值属性化模式" tabindex="-1">无值属性化模式 <a class="header-anchor" href="#无值属性化模式" aria-label="Permalink to &quot;无值属性化模式&quot;">​</a></h3><p>UnoCSS 最具创意的点在于支持了<strong>无值属性化模式</strong>，如果你使用过 <a href="https://windicss.org/" target="_blank" rel="nofollow noopener noreferrer">windicss</a>，那你肯定知道 <a href="https://windicss.org/" target="_blank" rel="nofollow noopener noreferrer">windicss</a> 中有一个属性化模式方案。</p><p>例如，上面提到的这段规则：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">py-10 mx-10 fw-300 bg-black border-rounded flex items-center</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>在属性化模式下，可以变成</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#C792EA;">p</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">y-10</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#C792EA;">m</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">x-10</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#C792EA;">text</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">300</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#C792EA;">bg</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">black</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">   border=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rounded</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#C792EA;">display</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">flex</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#C792EA;">flex</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">items-center</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>而在，UnoCSS 中，更进一步！</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">py-10</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">mx-10</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">fw-300</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">bg-black</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">border-rounded</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">flex</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">items-center</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>就像写自定义的 CSS 属性一样写原子化 CSS 类，对开发者而言节省了大多的冗余的代码。</p><blockquote><p>如果你担心预设的原子类和其他的属性冲突，你可以约束开启<a href="https://unocss.dev/presets/attributify#properties-conflicts" target="_blank" rel="nofollow noopener noreferrer">前缀</a>使用。</p></blockquote><h3 id="css-作用域" tabindex="-1">CSS 作用域 <a class="header-anchor" href="#css-作用域" aria-label="Permalink to &quot;CSS 作用域&quot;">​</a></h3><p>如果希望自己在组件内编写的原子类覆盖掉 UnoCSS 预设的原子类样式，那应该怎么办呢？</p><p>unoCSS 一开始就想到了这点，这是因为 UnoCSS 设计之初不支持预检（一些原子化CSS框架会使用预检功能重置原生元素样式），它将 CSS 重置的控制权完全留给了用户。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">m-2 rounded</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;</span><span style="color:#F07178;">slot</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 以下内容将被注入 bundler 中 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">scoped</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">m-2</span><span style="color:#89DDFF;">{</span><span style="color:#B2CCD6;">margin</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0.5rem</span><span style="color:#89DDFF;">;}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">rounded</span><span style="color:#89DDFF;">{</span><span style="color:#B2CCD6;">border-radius</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0.25rem</span><span style="color:#89DDFF;">;}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="性能" tabindex="-1">性能 <a class="header-anchor" href="#性能" aria-label="Permalink to &quot;性能&quot;">​</a></h3><p>没什么好说的，一个字：<strong>快!</strong></p><blockquote><p><a href="https://antfu.me/posts/reimagine-atomic-css-zh#%E6%80%A7%E8%83%BD" target="_blank" rel="nofollow noopener noreferrer">UnoCSS 可以比 Tailwind 的 JIT 引擎快 200 倍</a></p></blockquote>`,41),e=[p];function t(r,c,D,F,y,i){return a(),n("div",null,e)}const h=s(l,[["render",t]]);export{d as __pageData,h as default};
