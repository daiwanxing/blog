(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{363:function(t,e,s){"use strict";s.r(e);var r=s(45),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"link标签中的prefetch-与-preload-的差异"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#link标签中的prefetch-与-preload-的差异"}},[t._v("#")]),t._v(" link标签中的prefetch 与 preload 的差异")]),t._v(" "),s("p",[t._v("我们都知道行内样式的优点在于提高首屏渲染速度（不需要额外的请求一个css文件，浏览器下载好的html文件里就包含了css样式）。\n但是它也不可避免的造成了代码的维护困难，那么有没有一种办法可以使得既然提高html文档的渲染，又能容易维护css代码呢。\n我们可以通过link标签的rel属性中的prefetch 或者 preload属性来实现。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*  \n    告诉浏览器去预请求这个资源，因为要提前被UA用到，所以html文档下载完毕之后会立即去下\n    载这个资源,这是一个异步的操作，不会阻塞HTML的渲染，另外preload属性值可以使得css文件并行下载\n    只有rel="preload"时才能使用as属性，另外importance属性规定了资源的优先级，只有当rel="preload"\n    或者prefetch才能使用该属性\n*/')]),t._v("\n<link rel="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"preload"')]),t._v(" href="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx.cdn.style.css"')]),t._v(" as="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"style"')]),t._v(">\n")])])]),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    告诉浏览器，这是一个将来（下一个导航）可能将要使用的资源，资源的优先级程度没有preload高\n    UA会在网络状态空闲的时候去下载好这个资源，同样也是异步操作不会阻塞渲染\n*/")]),t._v("\n<link rel="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prefetch"')]),t._v(" href="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx.cdn.style.css"')]),t._v(">\n")])])]),s("p",[t._v("具体的资料我们可以参考MDN上关于"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/link#attr-rel",target:"_blank",rel:"noopener noreferrer"}},[t._v("rel属性"),s("OutboundLink")],1),t._v("的知识")]),t._v(" "),s("h2",{attrs:{id:"什么是预请求和简单请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是预请求和简单请求"}},[t._v("#")]),t._v(" 什么是预请求和简单请求")]),t._v(" "),s("p",[t._v("当UA去请求一个资源的时候（一般是跨域的资源），会通过一个OPTIONS方法发送一个预请求（preflight request）\n这个请求的目的：")]),t._v(" "),s("ol",[s("li",[t._v("告诉server，UA实际要请求的Methods")]),t._v(" "),s("li",[t._v("实际请求的header字段")])]),t._v(" "),s("p",[t._v("server收到该请求会返回一个response，该repsonse不带body，会告诉浏览器sever能够接受的请求方式以及header字段， UA再去匹配header字段和请求方式是否匹配，来决定是否发送真正的请求。\n"),s("br")]),t._v(" "),s("p",[t._v("简单请求一般是指methods为"),s("code",[t._v("GET")]),t._v("或者"),s("code",[t._v("POST")]),t._v("且没有任何自定义的header字段，其他的均为预请求。预检测请求的目的是什么， 是为了获知服务器是否允许跨域请求")]),t._v(" "),s("h2",{attrs:{id:"chrome-network"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chrome-network"}},[t._v("#")]),t._v(" Chrome-network")]),t._v(" "),s("p",[t._v("如果我们请求一个接口过于缓慢的问题，我们可以通过chrome控制台的network面板找到对应的接口列表，鼠标移到"),s("code",[t._v("waterfall")]),t._v("列表项，会浮出一张图，类似下面这样")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/network-waterfall.png"),alt:"network-waterfalll兼容性"}}),t._v(" "),s("p",[t._v("这张图上告诉了开发者关于某个接口从发起请求，DNS查询耗时，服务器响应耗时等等信息，我们一一记录每个字段代表的内容含义。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Queued at 750.73ms 表示的是该接口进入队列的是发生在750.73ms这个时间, 进入队列耗总耗时752.97ms。")])]),t._v(" "),s("li",[s("p",[t._v("浏览器请求资源的时候，html文件和css文件优先级是非常高的，这些资源是最先被进入队列，其次就是js脚本，资源文件。")])]),t._v(" "),s("li",[s("p",[t._v("stalled 表示停滞的意思，表示的是该连接被推迟了多久（在队列中等待了多久）")])]),t._v(" "),s("li",[s("p",[t._v("DNS-Lookup 表示的是DNS解析域名耗时")])]),t._v(" "),s("li",[s("p",[t._v("initial connection 表示的是和server建立连接TCP连接的耗时")])]),t._v(" "),s("li",[s("p",[t._v("SSL 表示的是SSL握手时间耗时（SSL安全套接字协议， 如果是https请求，需要SSL耗时，非https则不需要）")])]),t._v(" "),s("li",[s("p",[t._v("request sent 表示客户机发送请求的耗时")])]),t._v(" "),s("li",[s("p",[t._v("Wating (TTFB) 表示的浏览器等待第一个响应的字节的时间。")])]),t._v(" "),s("li",[s("p",[t._v("Content DonwLoad 表示的是客户机收到服务机响应的内容耗时")])])]),t._v(" "),s("h2",{attrs:{id:"浏览器缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存"}},[t._v("#")]),t._v(" 浏览器缓存")]),t._v(" "),s("p",[t._v("浏览器缓存分为强缓存和协商缓存，其中强缓存：Expires （http/1.0）, Cache-control(http/1.1)，协商缓存：Etag, Last-Modified。\n强缓存的优先级是要高于协商缓存的，如果浏览器请求一个资源，先判断是否能命中强缓存，如果无法命中，再继续判断能否命中协商缓存。")]),t._v(" "),s("p",[t._v("协商缓存中Etag的优先级要大于Last-Modified, 协商缓存必定会请求一次服务器信息，判断资源的etag和Last-Modified，未过期则返回一个几kb的响应头。\n强缓存不会发送请求，直接走本地200（from memory cache, from disk cache）")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/clipboard.png"),alt:"浏览器缓存命中流程图"}}),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("Expires和Cache-Control同时存在，则Cache-control会覆盖Expires, 目前只支持http1.0的浏览器的市场份额几乎没有，所有现代浏览器都是用的Cache-Control。")])]),t._v(" "),s("p",[t._v("强缓存： cache-control 有很多的值可以相互配合，比如 cache-control: Max-age=300,public")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("指令")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("public")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("资源能被代理服务器和客户端同时缓存")])]),t._v(" "),s("tr",[s("td",[t._v("private")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("资源只能被客户端缓存")])]),t._v(" "),s("tr",[s("td",[t._v("no-cache")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("只是不走200，但是可以走304")])]),t._v(" "),s("tr",[s("td",[t._v("no-store")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不缓存任何响应")])]),t._v(" "),s("tr",[s("td",[t._v("max-stale=30")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("30秒内即便缓存过期，也使用该缓存")])]),t._v(" "),s("tr",[s("td",[t._v("min-fresh=30")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("希望在30内获取最新的响应")])])])]),t._v(" "),s("h2",{attrs:{id:"git-提交代码的commit前缀术语"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-提交代码的commit前缀术语"}},[t._v("#")]),t._v(" git 提交代码的commit前缀术语")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("feat 新功能特性")])]),t._v(" "),s("li",[s("p",[t._v("test 增加测试")])]),t._v(" "),s("li",[s("p",[t._v("chore 构建工具、辅助文件的变动，比如.gitignore、jsconfig.js")])]),t._v(" "),s("li",[s("p",[t._v("fix 某一块功能的bug修复")])]),t._v(" "),s("li",[s("p",[t._v("docs 文档添加")])]),t._v(" "),s("li",[s("p",[t._v("refactor 对原有的功能进行重构")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);