"use strict";(self.webpackChunkfrontend_notes=self.webpackChunkfrontend_notes||[]).push([[853],{9369:(n,a,e)=>{e.r(a),e.d(a,{data:()=>s});const s={key:"v-581c1310",path:"/guide/mini-app/",title:"微信小程序开发笔记",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"guide/mini-app/README.md",git:{updatedTime:164026801e4}}},3985:(n,a,e)=>{e.r(a),e.d(a,{default:()=>p});const s=(0,e(6252).uE)('<h1 id="微信小程序开发笔记" tabindex="-1"><a class="header-anchor" href="#微信小程序开发笔记" aria-hidden="true">#</a> 微信小程序开发笔记</h1><ol><li>为什么建议替换Page采用Component构建页面</li></ol><p>流行的VantUI都是采用Component构造器构造页面的，主要是Component构造器可以实现计算属性，以及observers对props、data内数据的监听。另外还有behaviors可以实现类型Vue中的mixins实现逻辑复用。</p><p>关于page的生命周期和Component的生命周期执行顺序:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 组件实例被创建 到 组件实例进入页面节点树</span>\ncomponent created <span class="token operator">-</span><span class="token operator">&gt;</span> component attched <span class="token operator">-</span><span class="token operator">&gt;</span> \n<span class="token comment">// 页面页面加载 到  组件在视图层布局完成</span>\npage onLoad <span class="token operator">-</span><span class="token operator">&gt;</span> component ready <span class="token operator">-</span><span class="token operator">&gt;</span> \n<span class="token comment">// 页面卸载 到 组件实例被从页面节点树移除</span>\npage OnUnload <span class="token operator">-</span><span class="token operator">&gt;</span> component detached\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',5),p={render:function(n,a){return s}}}}]);