import{_ as t,c,o,b as e,d as r}from"./app.42f84fd5.js";const b=JSON.parse('{"title":"reflect 的作用","description":"","frontmatter":{},"headers":[],"relativePath":"js/proxy.md","lastUpdated":1677834485000}'),s={name:"js/proxy.md"},a=e("h1",{id:"reflect-的作用",tabindex:"-1"},[r("reflect 的作用 "),e("a",{class:"header-anchor",href:"#reflect-的作用","aria-hidden":"true"},"#")],-1),n=e("p",null,"ES5中的Object对象有一个defineProperty属性，为JS语言提供了’元编程‘的功能，但Object这个对象太重了，有二十多个属性，而且’元编程‘操作不应该是一个Object对象应该做的事情，所以ES6单独设计出了proxy和reflect两个方法。Reflect主要是可以对对象进行’元编程‘，可以根据操作的结果返回一个布尔值判断是否操作成功；",-1),l=e("div",{class:"warning custom-block"},[e("p",{class:"custom-block-title"},"警告"),e("p",null,"Reflect和Proxy 都是由Object原型构造的，两者都不能派生（new）新的实例，它们都是一个全局的对象；")],-1),d=[a,n,l];function i(p,_,f,h,m,u){return o(),c("div",null,d)}const j=t(s,[["render",i]]);export{b as __pageData,j as default};
