import{_ as e,c as t,o as s,a}from"./app.b77d871d.js";const h=JSON.parse('{"title":"三斜线指令是什么?","description":"","frontmatter":{},"headers":[],"relativePath":"ts/three-triple-line.md","lastUpdated":1677053920000}'),l={name:"ts/three-triple-line.md"},n=a(`<h1 id="三斜线指令是什么" tabindex="-1">三斜线指令是什么? <a class="header-anchor" href="#三斜线指令是什么" aria-hidden="true">#</a></h1><ul><li><p>三斜线指令是一种以<code>///</code>开头包含一个 XML 标记的单行注释，三斜线指令只能放在文件最顶层，放在其他位置会被视作无效.</p></li><li><p>三斜线指令用于导入包的类型声明，类似于<code>import</code>.我的理解是可以通过三斜线指令导入第三包的类型声明，防止编译器报错。</p></li></ul><p>你可能会说第三方依赖的包的类型声明不都是放在<code>node_modules/@types/**</code>下吗，为啥还需要三斜线指令？</p><p>的确，如果第三方包的类型声明能在<code>@types</code>中找到，就不需要这个方法，但是像部分库的类型声明是放在包的目录下的，这样我们可以通过三斜线指令导入声明进来。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// global.d.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">reference</span><span style="color:#89DDFF;font-style:italic;"> </span><span style="color:#C792EA;font-style:italic;">path</span><span style="color:#89DDFF;font-style:italic;">=</span><span style="color:#89DDFF;font-style:italic;">&quot;</span><span style="color:#C3E88D;font-style:italic;">node_modules@amap/amap-jsapi-types/index.d.ts</span><span style="color:#89DDFF;font-style:italic;">&quot;</span><span style="color:#89DDFF;font-style:italic;"> /&gt;</span></span>
<span class="line"></span></code></pre></div><p>总而言之，三斜线指令了解就好，基本用不到这个东西，大部分导入类型声明的场景直接用<code>tsconfig.json</code>中的<code>types</code>字段配置好即可。</p>`,6),o=[n];function p(c,i,r,d,_,y){return s(),t("div",null,o)}const m=e(l,[["render",p]]);export{h as __pageData,m as default};
