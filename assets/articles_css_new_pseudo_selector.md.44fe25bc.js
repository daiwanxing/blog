import{_ as t,f as a,h as n,y as s,D as p,R as e}from"./chunks/framework.229ba910.js";const c={},r={class:"page"},i=s("header",null,[s("p",null," Lorem ipsum dolor sit amet consectetur adipisicing elit. Incidunt iure ut animi vero a, inventore dolorem in assumenda maxime est eaque vel aspernatur aliquam porro explicabo tenetur vitae ab quis. ")],-1),d=s("main",null,[s("p",null," Lorem ipsum dolor, sit amet consectetur adipisicing elit. Porro eaque doloremque accusamus molestiae delectus facilis eius, ipsam ratione quibusdam quos, dolor ullam. Non quia, saepe doloremque facere quaerat adipisci mollitia! ")],-1),y=s("footer",null,[s("p",null," Lorem ipsum dolor sit, amet consectetur adipisicing elit. Tempora praesentium ea earum, autem similique deleniti repudiandae ad quae eligendi, atque quaerat in quis maxime minima commodi? Aperiam deserunt voluptatibus porro. ")],-1),F=[i,d,y];function D(o,l){return a(),n("div",r,F)}const C=t(c,[["render",D]]),u=e(`<h1 id="css3-新伪类选择器" tabindex="-1">CSS3 新伪类选择器 <a class="header-anchor" href="#css3-新伪类选择器" aria-label="Permalink to &quot;CSS3 新伪类选择器&quot;">​</a></h1><p>emmmm，先复习下什么是伪类选择器。在 CSS 中，伪类选择器一般以冒号 <code>:</code> 开头，并接着紧跟着表示状态或者位置的关键字。</p><p>例如：</p><ul><li><code>:hover</code></li><li><code>:first-child</code></li><li><code>:active</code></li></ul><p>有些伪类选择器，还支持传入特定的参数，用于精确的匹配元素的位置。</p><p>例如：</p><ul><li><code>:nth-child(odd)</code> 表示匹配所有元素出现的位置为奇数</li><li><code>:not(:empty)</code> 表示匹配元素的内容为非空的位置</li></ul><p>这些嘛都不是本文要说的内容，只是做个简单的回顾。</p><p>本文主要聊聊 CSS3 中的几个新的伪类选择器，分别是 <code>:has()</code>、<code>:is()</code>、<code>:where()</code>。</p><h2 id="is" tabindex="-1"><code>:is()</code> <a class="header-anchor" href="#is" aria-label="Permalink to &quot;\`:is()\`&quot;">​</a></h2><p><code>:is()</code> 伪类选择器可以接收一组选择器列表作为参数（参数用逗号分隔），并能够选择列表中任意一个可匹配的元素应用样式规则。这个是非常有用的一个伪类选择器，本人已经在项目中使用该选择器很多次，节省了大量 css 样式代码编写。</p><p>来看个例子就能知道为什么如此有用</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">header</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">header</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">main</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">main</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">footer</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">footer</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>在上面这个 html 结构中，如果要选择 header，main 以及 footer 下面的 p 标签，你会如何做？</p><p>大多数人在借助预处理器语言的情况下，会编写出这样的代码。</p><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">header</span><span style="color:#A6ACCD;">, </span><span style="color:#FFCB6B;">footer</span><span style="color:#A6ACCD;">, </span><span style="color:#FFCB6B;">footer</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">p</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">// </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>这样写，当然没问题，但是原生的 <code>:is()</code> 选择器能够更优雅实现</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">:is(</span><span style="color:#FFCB6B;">header</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">footer</span><span style="color:#A6ACCD;">) </span><span style="color:#FFCB6B;">p</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/*  */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>下面是用 <code>:is()</code> 选择器实现的上面的示例</p>`,19),m=e(`<p>这里的 <code>is()</code> 伪类选择器会匹配选择器列表中的任意一个可匹配的元素并找到该元素的后代元素 p 应用样式规则。</p><p>怎么样，看起来是不是很有用呢？</p><p>需要，注意的是 <code>:is()</code> 选择器的权重值为参数列表中取权重值最高的那个。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">:is(</span><span style="color:#89DDFF;">#</span><span style="color:#F78C6C;">app</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">app</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/* 这个 :is 选择器的权重为 100，因为这个参数列表中，id选择器权重值最高 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p><code>:is()</code> 伪类选择器不能接收伪元素作为参数列表。所以这样不行：</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">p</span><span style="color:#A6ACCD;">:is(</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">before</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">after</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">font-size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10em</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div><h2 id="where" tabindex="-1"><code>:where()</code> <a class="header-anchor" href="#where" aria-label="Permalink to &quot;\`:where()\`&quot;">​</a></h2><p>先看下兼容性表格。</p><table><thead><tr><th>伪类选择器</th><th style="text-align:center;">chrome</th><th>firefox</th><th>safari</th></tr></thead><tbody><tr><td><code>:has()</code></td><td style="text-align:center;"><strong>&gt;=105</strong></td><td>目前仍部分不支持（<strong>113</strong>）</td><td><strong>&gt;=15.4</strong></td></tr><tr><td><code>:where()</code></td><td style="text-align:center;"><strong>&gt;=88</strong></td><td><strong>&gt;=111</strong></td><td><strong>&gt;=14</strong></td></tr><tr><td><code>:is()</code></td><td style="text-align:center;"><strong>&gt;=88(不包含 <code>-webkit-any</code>)</strong></td><td><strong>&gt;=78(不包含 <code>-webkit-any</code>)</strong></td><td><strong>&gt;=14(不包含 <code>-webkit-any</code>)</strong></td></tr></tbody></table><p>目前除了 <code>:has</code> 选择器在 firefox 中仍然不被支持外，其他两个都已经全部支持了。</p>`,9),A=JSON.parse('{"title":"CSS3 新伪类选择器","description":"","frontmatter":{},"headers":[],"relativePath":"articles/css/new_pseudo_selector.md","lastUpdated":1680361580000}'),h={name:"articles/css/new_pseudo_selector.md"},f=Object.assign(h,{setup(o){return(l,g)=>(a(),n("div",null,[u,p(C),m]))}});export{A as __pageData,f as default};
