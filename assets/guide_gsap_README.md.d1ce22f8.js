import{_ as s,c as a,o as n,a as l}from"./app.90452c48.js";const F=JSON.parse('{"title":"GSAP 是一个高性能的Javascript动画库，通过使用gsap可以实现许多精美的交互效果","description":"","frontmatter":{},"headers":[{"level":2,"title":"使用GSAP","slug":"使用gsap","link":"#使用gsap","children":[]},{"level":2,"title":"使用gsap给DOM元素设置animate","slug":"使用gsap给dom元素设置animate","link":"#使用gsap给dom元素设置animate","children":[]},{"level":2,"title":"gsap 定义了一些特殊的属性","slug":"gsap-定义了一些特殊的属性","link":"#gsap-定义了一些特殊的属性","children":[]}],"relativePath":"guide/gsap/README.md","lastUpdated":1676200671000}'),p={name:"guide/gsap/README.md"},e=l(`<h1 id="gsap-是一个高性能的javascript动画库-通过使用gsap可以实现许多精美的交互效果" tabindex="-1">GSAP 是一个高性能的Javascript动画库，通过使用gsap可以实现许多精美的交互效果 <a class="header-anchor" href="#gsap-是一个高性能的javascript动画库-通过使用gsap可以实现许多精美的交互效果" aria-hidden="true">#</a></h1><img src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/16327/logo-man.svg"><h2 id="使用gsap" tabindex="-1">使用GSAP <a class="header-anchor" href="#使用gsap" aria-hidden="true">#</a></h2><p>通过cdn 或者 <code>npm i gsap</code> 安装gsap</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// gsap.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">gsap</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">gsap</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// gsap除了核心模块，还有其他的插件，可以通过resigerPlugin方法注册插件</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">PixiPlugin</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">gsap/PixiPlugin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">MotionPathPlugin</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">gsap/MotionPathPlugin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">gsap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">registerPlugin</span><span style="color:#A6ACCD;">(PixiPlugin</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> MotionPathPlugin)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="使用gsap给dom元素设置animate" tabindex="-1">使用gsap给DOM元素设置animate <a class="header-anchor" href="#使用gsap给dom元素设置animate" aria-hidden="true">#</a></h2><p>通过<code>gsap.to</code>代表设置一个元素<code>要完成</code>的动画状态，以及<code>gsap.from</code>设置元素最开始的入场动画状态。</p><h2 id="gsap-定义了一些特殊的属性" tabindex="-1">gsap 定义了一些特殊的属性 <a class="header-anchor" href="#gsap-定义了一些特殊的属性" aria-hidden="true">#</a></h2><ol><li>delay， 定义了动画延迟多久开始执行</li><li>onComplete 当动画结束后，回调函数会被触发</li><li>onUpdate 每次动画更新（绘制新的一帧）/渲染时都将会被执行，（UI线程每隔16.6ms绘制一次UI，应该是每16.6ms执行一次回调，当然并不能保证每次都是16.6ms绘制一次UI）</li><li>ease 设置缓动函数</li><li>stagger 交错可以为一组对象设置动画的延时时间</li><li>onStart 当动画开始的时候被触发</li><li>onRepeat 当动画每次被重复执行时执行回调</li><li>onReverseComplete 当动画反转时再次到达开头时触发</li></ol><p>// 可以自己指定回调的参数, 必须是一个数组将参数包裹</p><p>stagger的值是一个number，例如: <code>stagger: .2</code>； 那么gsap访问到的每个元素的delay都会依次以0.2的公差递增delay。</p><p>使用<code>gsap.timeline</code>可以编排时间线动画</p>`,12),o=[e];function t(c,i,r,D,d,g){return n(),a("div",null,o)}const A=s(p,[["render",t]]);export{F as __pageData,A as default};
